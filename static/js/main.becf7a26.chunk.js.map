{"version":3,"sources":["constants.js","contexts/ThemeContext.js","components/form_elements/SelectInput.js","contexts/AppContext.js","components/form_elements/SubmitButton.js","components/form_elements/TextInput.js","components/Form.js","components/ThemeToggleButton.js","components/todo_action_buttons/CompleteButton.js","components/todo_action_buttons/DeleteButton.js","components/todo_action_buttons/EditButton.js","components/todo_action_buttons/ProgressButton.js","components/Todo.js","components/ToDoList.js","App.js","index.js"],"names":["COMPLETED","UNCOMPLETED","PROGRESS","LIGHT","ThemeContext","createContext","SelectInput","setStatus","theme","useContext","className","onChange","e","target","value","name","AppContext","todos","setTodos","action","setAction","itemToEdit","undefined","setItemToEdit","inputText","setInputText","SubmitButton","submitTodoHandler","preventDefault","id","Math","random","text","completed","progress","editTodoHandler","map","item","onClick","type","actionButton","TextInput","Form","setFilteredTodos","useState","status","useEffect","filterHandler","filter","todo","ThemeToggleButton","toggleTheme","htmlFor","CompleteButton","DeleteButton","EditButton","ProgressButton","disabled","Todo","TodoList","filteredTodos","App","setTheme","Provider","ToDoList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.becf7a26.chunk.js","sourcesContent":["const COMPLETED = 'completed';\r\nconst UNCOMPLETED = 'uncompleted';\r\nconst PROGRESS = 'progress';\r\nconst ALL = 'all';\r\n\r\nconst LIGHT = 'light';\r\nconst DARK = 'dark';\r\n\r\nexport { ALL, COMPLETED, UNCOMPLETED, PROGRESS, LIGHT, DARK };\r\n","import { createContext } from 'react';\r\n\r\nimport { LIGHT } from '../constants';\r\n\r\nconst ThemeContext = createContext(LIGHT);\r\n\r\nexport default ThemeContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { ALL, COMPLETED, UNCOMPLETED, PROGRESS } from '../../constants';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\n\r\nconst SelectInput = ({ setStatus }) => {\r\n  const theme = useContext(ThemeContext);\r\n  const statusHandler = e => {\r\n    setStatus(e.target.value);\r\n  };\r\n  return (\r\n    <div className={`select ${theme}`}>\r\n      <select\r\n        onChange={statusHandler}\r\n        name=\"todos\"\r\n        className={`filter-todo ${theme}`}\r\n      >\r\n        <option value={ALL}>All</option>\r\n        <option value={COMPLETED}>Completed</option>\r\n        <option value={UNCOMPLETED}>Uncompleted</option>\r\n        <option value={PROGRESS}>In Progress</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import { createContext } from 'react';\r\n\r\nconst AppContext = createContext({\r\n  todos: [],\r\n  setTodos: () => {},\r\n  action: 'add',\r\n  setAction: () => {},\r\n  itemToEdit: undefined,\r\n  setItemToEdit: () => {},\r\n  inputText: '',\r\n  setInputText: () => {},\r\n});\r\n\r\nexport default AppContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\n\r\nconst SubmitButton = ({ todos }) => {\r\n  const {\r\n    action,\r\n    setAction,\r\n    setTodos,\r\n    inputText,\r\n    setInputText,\r\n    itemToEdit,\r\n  } = useContext(AppContext);\r\n\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const submitTodoHandler = e => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        id: Math.random() * 100,\r\n        text: inputText,\r\n        completed: false,\r\n        progress: false,\r\n      },\r\n    ]);\r\n    setInputText('');\r\n  };\r\n\r\n  const editTodoHandler = e => {\r\n    e.preventDefault();\r\n    setTodos(\r\n      todos.map(item => {\r\n        if (item.id === itemToEdit)\r\n          return {\r\n            ...item,\r\n            text: inputText,\r\n          };\r\n        else return item;\r\n      })\r\n    );\r\n    setInputText('');\r\n    setAction('add');\r\n  };\r\n\r\n  const actionButton = () => {\r\n    switch (action) {\r\n      case 'add':\r\n        return (\r\n          <button\r\n            onClick={submitTodoHandler}\r\n            className={`todo-button ${theme}`}\r\n            type=\"submit\"\r\n          >\r\n            <i className=\"fas fa-plus-circle\"></i>\r\n          </button>\r\n        );\r\n      case 'edit':\r\n        return (\r\n          <button\r\n            onClick={editTodoHandler}\r\n            className={`todo-button ${theme}`}\r\n            type=\"submit\"\r\n          >\r\n            <i className=\"fas fa-pen-square\"></i>\r\n          </button>\r\n        );\r\n    }\r\n  };\r\n  return actionButton();\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React, { useContext } from 'react';\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\n\r\nconst TextInput = () => {\r\n  //used useContext Hook instead of props\r\n  const { inputText, setInputText } = useContext(AppContext);\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const inputTextHandler = e => {\r\n    setInputText(e.target.value);\r\n  };\r\n  return (\r\n    <input\r\n      value={inputText}\r\n      onChange={inputTextHandler}\r\n      type=\"text\"\r\n      className={`todo-input ${theme}`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { COMPLETED, PROGRESS, UNCOMPLETED } from '../constants';\r\nimport { SelectInput, SubmitButton, TextInput } from './form_elements/index';\r\n\r\nconst Form = ({\r\n  todos, // used here\r\n  setFilteredTodos, //used here\r\n}) => {\r\n  //State variables\r\n  const [status, setStatus] = useState('all');\r\n\r\n  //Hook usage\r\n  useEffect(() => {\r\n    filterHandler();\r\n  }, [todos, status]);\r\n\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case COMPLETED:\r\n        setFilteredTodos(todos.filter(todo => todo.completed));\r\n        break;\r\n      case UNCOMPLETED:\r\n        setFilteredTodos(todos.filter(todo => !todo.completed));\r\n        break;\r\n      case PROGRESS:\r\n        setFilteredTodos(todos.filter(todo => todo.progress));\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <TextInput />\r\n      <SubmitButton todos={todos} />\r\n      <SelectInput setStatus={setStatus} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst ThemeToggleButton = ({ toggleTheme }) => {\r\n  return (\r\n    <div className=\"theme-switch\">\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"checkbox\"\r\n        id=\"checkbox\"\r\n        onClick={toggleTheme}\r\n      />\r\n      <label htmlFor=\"checkbox\" className=\"label\">\r\n        <i className=\"fas fa-moon fa-xs\"></i>\r\n        <i className=\"fas fa-sun fa-xs\"></i>\r\n        <div className=\"ball\"></div>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeToggleButton;\r\n","import React, { useContext } from 'react';\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\n\r\nconst CompleteButton = ({ todo }) => {\r\n  const { setTodos, todos } = useContext(AppContext);\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map(item => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            progress: false,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <button onClick={completeHandler} className={`complete-btn ${theme}`}>\r\n      <i className=\"fas fa-check\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CompleteButton;\r\n","import React, { useContext } from 'react';\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\n\r\nconst DeleteButton = ({ todo }) => {\r\n  const { setTodos, todos } = useContext(AppContext);\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter(item => item.id !== todo.id));\r\n  };\r\n  return (\r\n    <button onClick={deleteHandler} className={`trash-btn ${theme}`}>\r\n      <i className=\"fas fa-trash\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React, { useContext } from 'react';\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\n\r\nconst EditButton = ({ todo }) => {\r\n  const { setAction, setItemToEdit, setInputText } = useContext(AppContext);\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const editHandler = () => {\r\n    setAction('edit');\r\n    setInputText(todo.text);\r\n    setItemToEdit(todo.id);\r\n  };\r\n  return (\r\n    <button onClick={editHandler} className={`edit-btn ${theme}`}>\r\n      <i className=\"fas fa-edit\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default EditButton;\r\n","import React, { useContext } from 'react';\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\n\r\nconst ProgressButton = ({ todo }) => {\r\n  const { setTodos, todos } = useContext(AppContext);\r\n  const theme = useContext(ThemeContext);\r\n  const progressHandler = () => {\r\n    setTodos(\r\n      todos.map(item => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            progress: !item.progress,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <button\r\n      onClick={progressHandler}\r\n      disabled={todo.completed}\r\n      className={`progress-btn ${todo.completed ? 'disabled' : ''} ${theme}`}\r\n    >\r\n      <i className=\"fas fa-spinner\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ProgressButton;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { COMPLETED } from '../constants';\r\nimport ThemeContext from '../contexts/ThemeContext';\r\nimport {\r\n  CompleteButton,\r\n  DeleteButton,\r\n  EditButton,\r\n  ProgressButton,\r\n} from './todo_action_buttons/index';\r\n\r\nconst Todo = ({ todo }) => {\r\n  const theme = useContext(ThemeContext);\r\n  return (\r\n    <div className=\"todo\">\r\n      <li\r\n        className={`todo-item ${todo.completed ? COMPLETED : ''} ${\r\n          todo.progress ? 'in-progress' : ''\r\n        } ${theme}`}\r\n      >\r\n        {todo.text}\r\n      </li>\r\n      <EditButton todo={todo} />\r\n      <ProgressButton todo={todo} />\r\n      <CompleteButton todo={todo} />\r\n      <DeleteButton todo={todo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\n\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map(todo => (\r\n          <Todo key={todo.id} todo={todo} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import './css/App.css';\r\nimport './css/AppDark.css';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport Form from './components/Form';\r\nimport ThemeToggleButton from './components/ThemeToggleButton';\r\nimport ToDoList from './components/ToDoList';\r\nimport { DARK, LIGHT } from './constants';\r\nimport {AppContext, ThemeContext} from \"./contexts\";\r\n\r\nfunction App() {\r\n  //State\r\n  const [todos, setTodos] = useState([]);\r\n  const [action, setAction] = useState('add');\r\n  const [itemToEdit, setItemToEdit] = useState(undefined);\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [theme, setTheme] = useState(LIGHT);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme === LIGHT ? DARK : LIGHT);\r\n  };\r\n\r\n  return (\r\n    <div className={`App  ${theme}`}>\r\n      <header>\r\n        <h1>Todo List</h1>\r\n        <ThemeToggleButton toggleTheme={toggleTheme} />\r\n      </header>\r\n      <AppContext.Provider\r\n        value={{\r\n          todos,\r\n          setTodos,\r\n          action,\r\n          setAction,\r\n          setItemToEdit,\r\n          setInputText,\r\n          itemToEdit,\r\n          inputText,\r\n        }}\r\n      >\r\n        <ThemeContext.Provider value={theme}>\r\n          <Form setFilteredTodos={setFilteredTodos} todos={todos} />\r\n          <ToDoList filteredTodos={filteredTodos} />\r\n        </ThemeContext.Provider>\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}